<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>md</string>
		<string>mdown</string>
		<string>markdown</string>
		<string>markdn</string>
		<string>Rmd</string>
		<string>rmd</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~M</string>
	<key>name</key>
	<string>Markdown Redcarpet</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#block</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#yaml_frontmatter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#separator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#heading</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blockquote</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#lists</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#raw_block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block_ruby</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block_javascript</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block_coffee</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block_elixir</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block_shell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block_haml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block_html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block_r</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block_c</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block_cpp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block_yaml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fenced_block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link-def</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#paragraph</string>
				</dict>
			</array>
			<key>repository</key>
			<dict>
				<key>blockquote</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)(&gt;) ?</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.quote.markdown</string>
						</dict>
					</dict>
					<key>name</key>
					<string>markup.quote.markdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block</string>
						</dict>
					</array>
					<key>while</key>
					<string>(^|\G)(&gt;) ?</string>
				</dict>
				<key>fenced_block</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})[ ]*(\w+)?$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>markup.raw.block.markdown.fenced</string>
				</dict>
				<key>fenced_block_c</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})\{*[ ]*(?:c|C)\s*\}*$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>markup.raw.block.markdown.fenced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.c</string>
						</dict>
					</array>
				</dict>
				<key>fenced_block_coffee</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})[ ]*(?:coffee|coffeescript)$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>markup.raw.block.markdown.fenced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.coffee</string>
						</dict>
					</array>
				</dict>
				<key>fenced_block_cpp</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})\{*[ ]*(?:cpp|c\+\+|C\+\+).*\}*$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>markup.raw.block.markdown.fenced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.c++</string>
						</dict>
					</array>
				</dict>
				<key>fenced_block_elixir</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})[ ]*(?:elixir)$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>markup.raw.block.markdown.fenced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.elixir</string>
						</dict>
					</array>
				</dict>
				<key>fenced_block_haml</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})[ ]*(?:haml)$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>markup.raw.block.markdown.fenced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.haml</string>
						</dict>
					</array>
				</dict>
				<key>fenced_block_html</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})[ ]*(?:html)$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>markup.raw.block.markdown.fenced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.html.basic</string>
						</dict>
					</array>
				</dict>
				<key>fenced_block_javascript</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})[ ]*(?:js|javascript)$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>markup.raw.block.markdown.fenced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
					</array>
				</dict>
				<key>fenced_block_r</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})\{*[ ]*(?:r|R).*\}*$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>source.r.embedded.rmarkdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.r</string>
						</dict>
					</array>
				</dict>
				<key>fenced_block_ruby</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})[ ]*(?:rb|ruby)$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>markup.raw.block.markdown.fenced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.ruby</string>
						</dict>
					</array>
				</dict>
				<key>fenced_block_shell</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})[ ]*(?:bash|shell|sh)$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>markup.raw.block.markdown.fenced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.shell</string>
						</dict>
					</array>
				</dict>
				<key>fenced_block_yaml</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([`]{3})\{*[ ]*(?:yaml|YAML).*\}*$</string>
					<key>end</key>
					<string>(^|\G)([`]{3})($|\z)</string>
					<key>name</key>
					<string>markup.raw.block.markdown.fenced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.yaml</string>
						</dict>
					</array>
				</dict>
				<key>heading</key>
				<dict>
					<key>begin</key>
					<string>(?:^|\G)(#{1,6})\s*(?=[\S[^#]])</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.heading.markdown</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.section.markdown</string>
					<key>end</key>
					<string>\s*(#{1,6})?$\n?</string>
					<key>name</key>
					<string>markup.heading.${1/(#)(#)?(#)?(#)?(#)?(#)?/${6:?6:${5:?5:${4:?4:${3:?3:${2:?2:1}}}}}/}.markdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#inline</string>
						</dict>
					</array>
				</dict>
				<key>heading-setext</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>^(={3,})(?=[ \t]*$\n?)</string>
							<key>name</key>
							<string>markup.heading.setext.1.markdown</string>
						</dict>
						<dict>
							<key>match</key>
							<string>^(-{3,})(?=[ \t]*$\n?)</string>
							<key>name</key>
							<string>markup.heading.setext.2.markdown</string>
						</dict>
					</array>
				</dict>
				<key>html</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)(^|\G)(?=&lt;(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del).*&lt;/\2\s*&gt;\s*$)</string>
							<key>end</key>
							<string>$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.html.basic</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(^|\G)(?=&lt;(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.html.basic</string>
								</dict>
							</array>
							<key>while</key>
							<string>\G(?!&lt;/\2\s*&gt;)</string>
						</dict>
					</array>
				</dict>
				<key>link-def</key>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.constant.markdown</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.markdown</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>string.other.link.description.title.markdown</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.markdown</string>
						</dict>
						<key>13</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.markdown</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.other.reference.link.markdown</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.constant.markdown</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.markdown</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.link.markdown</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.markdown</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.link.markdown</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>string.other.link.description.title.markdown</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.markdown</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^(?x:
									\s*						# Leading whitespace
									(\[)(.+?)(\])(:)		# Reference name
									[ \t]*					# Optional whitespace
									(&lt;?)(\S+?)(&gt;?)			# The url
									[ \t]*					# Optional whitespace
									(?:
										  ((\().+?(\)))		# Match title in quotes…
										| ((").+?("))		# or in parens.
									)?						# Title is optional
									\s*						# Optional whitespace
									$
								)</string>
					<key>name</key>
					<string>meta.link.reference.def.markdown</string>
				</dict>
				<key>list_paragraph</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)(?=\S)(?![*+-]\s|[0-9]+\.\s)</string>
					<key>name</key>
					<string>meta.paragraph.markdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#inline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.html.basic</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#heading-setext</string>
						</dict>
					</array>
					<key>while</key>
					<string>(^|\G)(?!\s*$|#|[ ]{,3}([-*_][ ]{2,}){3,}[ \t]*$\n?|&gt;|[ ]{0,3}[*+-]|[ ]{0,3}[0-9]+\.)</string>
				</dict>
				<key>lists</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(^|\G)([ ]{0,3})([*+-])([ ]{1,3}|\t)</string>
							<key>beginCaptures</key>
							<dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.list.markdown</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>Currently does not support un-indented second lines.</string>
							<key>name</key>
							<string>markup.list.unnumbered.markdown</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#list_paragraph</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#block</string>
								</dict>
							</array>
							<key>while</key>
							<string>\G([ ]{4}|\t|$)</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(^|\G)([ ]{0,3})([0-9]+\.)([ ]{1,3}|\t)</string>
							<key>beginCaptures</key>
							<dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.list.markdown</string>
								</dict>
							</dict>
							<key>name</key>
							<string>markup.list.numbered.markdown</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#list_paragraph</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#block</string>
								</dict>
							</array>
							<key>while</key>
							<string>\G([ ]{4}|\t|$)</string>
						</dict>
					</array>
				</dict>
				<key>paragraph</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)(?=\S)</string>
					<key>name</key>
					<string>meta.paragraph.markdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#inline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.html.basic</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#heading-setext</string>
						</dict>
					</array>
					<key>while</key>
					<string>(^|\G)(?!\s*$|#|[ ]{,3}([-*_][ ]{2,}){3,}[ \t]*$\n?|\s*\[.+?\]:|&gt;)</string>
				</dict>
				<key>raw_block</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)([ ]{4}|\t)</string>
					<key>name</key>
					<string>markup.raw.block.markdown</string>
					<key>while</key>
					<string>(^|\G)([ ]{4}|\t)</string>
				</dict>
				<key>separator</key>
				<dict>
					<key>match</key>
					<string>(^|\G)[ ]{,3}([-*_])([ ]{,2}\2){2,}[ \t]*$\n?</string>
					<key>name</key>
					<string>meta.separator.markdown</string>
				</dict>
				<key>yaml_frontmatter</key>
				<dict>
					<key>begin</key>
					<string>(^|\G)[ ]{,3}([-*_])([ ]{,2}\2){2,}[ \t]*$\n?</string>
					<key>end</key>
					<string>(^|\G)[ ]{,3}([-*_])([ ]{,2}\2){2,}[ \t]*$\n?</string>
					<key>name</key>
					<string>source.yaml.embedded.markdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.yaml</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>inline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ampersand</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bracket</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bold</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#italic</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#code-inline-r</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#raw</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#image-inline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#image-ref</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link-email</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link-inet</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link-inline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link-ref</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link-ref-literal</string>
				</dict>
			</array>
			<key>repository</key>
			<dict>
				<key>ampersand</key>
				<dict>
					<key>comment</key>
					<string>
						Markdown will convert this for us. We match it so that the
						HTML grammar will not mark it up as invalid.
					</string>
					<key>match</key>
					<string>&amp;(?!([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+);)</string>
					<key>name</key>
					<string>meta.other.valid-ampersand.markdown</string>
				</dict>
				<key>bold</key>
				<dict>
					<key>begin</key>
					<string>(?x)
								(\*\*|__)(?=\S)								# Open
								(?=
									(
									    &lt;[^&gt;]*+&gt;							# HTML tags
									  | (?&lt;raw&gt;`+)([^`]|(?!(?&lt;!`)\k&lt;raw&gt;(?!`))`)*+\k&lt;raw&gt;
																			# Raw
									  | \\[\\`*_{}\[\]()#.!+\-&gt;]?+			# Escapes
									  | \[
										(
										        (?&lt;square&gt;					# Named group
													[^\[\]\\]				# Match most chars
										          | \\.						# Escaped chars
										          | \[ \g&lt;square&gt;*+ \]		# Nested brackets
										        )*+
											\]
											(
												(							# Reference Link
													[ ]?					# Optional space
													\[[^\]]*+\]				# Ref name
												)
											  | (							# Inline Link
													\(						# Opening paren
														[ \t]*+				# Optional whtiespace
														&lt;?(.*?)&gt;?			# URL
														[ \t]*+				# Optional whtiespace
														(					# Optional Title
															(?&lt;title&gt;['"])
															(.*?)
															\k&lt;title&gt;
														)?
													\)
												)
											)
										)
									  | (?!(?&lt;=\S)\1).						# Everything besides
																			# style closer
									)++
									(?&lt;=\S)\1								# Close
								)
							</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bold.markdown</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\S)(\1)</string>
					<key>name</key>
					<string>markup.bold.markdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>applyEndPatternLast</key>
							<integer>1</integer>
							<key>begin</key>
							<string>(?=&lt;[^&gt;]*?&gt;)</string>
							<key>end</key>
							<string>(?&lt;=&gt;)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.html.basic</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#ampersand</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#bracket</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#raw</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#italic</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#image-inline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link-inline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link-inet</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link-email</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#image-ref</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link-ref-literal</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link-ref</string>
						</dict>
					</array>
				</dict>
				<key>bracket</key>
				<dict>
					<key>comment</key>
					<string>
						Markdown will convert this for us. We match it so that the
						HTML grammar will not mark it up as invalid.
					</string>
					<key>match</key>
					<string>&lt;(?![a-z/?\$!])</string>
					<key>name</key>
					<string>meta.other.valid-bracket.markdown</string>
				</dict>
				<key>code-inline-r</key>
				<dict>
					<key>begin</key>
					<string>(`[r|R][ ]+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.raw.markdown</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(`)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.raw.markdown</string>
						</dict>
					</dict>
					<key>name</key>
					<string>source.r.embedded.rmarkdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.r</string>
						</dict>
					</array>
				</dict>
				<key>escape</key>
				<dict>
					<key>match</key>
					<string>\\[-`*_#+.!(){}\[\]\\&gt;]</string>
					<key>name</key>
					<string>constant.character.escape.markdown</string>
				</dict>
				<key>image-inline</key>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.markdown</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>string.other.link.description.title.markdown</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.markdown</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.markdown</string>
						</dict>
						<key>13</key>
						<dict>
							<key>name</key>
							<string>string.other.link.description.title.markdown</string>
						</dict>
						<key>14</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.markdown</string>
						</dict>
						<key>15</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.markdown</string>
						</dict>
						<key>16</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.metadata.markdown</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.other.link.description.markdown</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.markdown</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.whitespace.markdown</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.metadata.markdown</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.link.markdown</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.image.markdown</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.link.markdown</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x:
						\!							# Images start with !
						(\[)((?&lt;square&gt;[^\[\]\\]|\\.|\[\g&lt;square&gt;*+\])*+)(\])
													# Match the link text.
						([ ])?						# Space not allowed
						(\()						# Opening paren for url
							(&lt;?)(\S+?)(&gt;?)			# The url
							[ \t]*					# Optional whitespace
							(?:
								  ((\().+?(\)))		# Match title in parens…
								| ((").+?("))		# or in quotes.
							)?						# Title is optional
							\s*						# Optional whitespace
						(\))
					 )</string>
					<key>name</key>
					<string>meta.image.inline.markdown</string>
				</dict>
				<key>image-ref</key>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.markdown</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.other.link.description.markdown</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.markdown</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.constant.markdown</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>constant.other.reference.link.markdown</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.constant.markdown</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\!(\[)((?&lt;square&gt;[^\[\]\\]|\\.|\[\g&lt;square&gt;*+\])*+)(\])[ ]?(\[)(.*?)(\])</string>
					<key>name</key>
					<string>meta.image.reference.markdown</string>
				</dict>
				<key>italic</key>
				<dict>
					<key>begin</key>
					<string>(?x)
								(\*|_)(?=\S)								# Open
								(?=
									(
									    &lt;[^&gt;]*+&gt;							# HTML tags
									  | (?&lt;raw&gt;`+)([^`]|(?!(?&lt;!`)\k&lt;raw&gt;(?!`))`)*+\k&lt;raw&gt;
																			# Raw
									  | \\[\\`*_{}\[\]()#.!+\-&gt;]?+			# Escapes
									  | \[
										(
										        (?&lt;square&gt;					# Named group
													[^\[\]\\]				# Match most chars
										          | \\.						# Escaped chars
										          | \[ \g&lt;square&gt;*+ \]		# Nested brackets
										        )*+
											\]
											(
												(							# Reference Link
													[ ]?					# Optional space
													\[[^\]]*+\]				# Ref name
												)
											  | (							# Inline Link
													\(						# Opening paren
														[ \t]*+				# Optional whtiespace
														&lt;?(.*?)&gt;?			# URL
														[ \t]*+				# Optional whtiespace
														(					# Optional Title
															(?&lt;title&gt;['"])
															(.*?)
															\k&lt;title&gt;
														)?
													\)
												)
											)
										)
									  | \1\1								# Must be bold closer
									  | (?!(?&lt;=\S)\1).						# Everything besides
																			# style closer
									)++
									(?&lt;=\S)\1								# Close
								)
							</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.italic.markdown</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\S)(\1)((?!\1)|(?=\1\1))</string>
					<key>name</key>
					<string>markup.italic.markdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>applyEndPatternLast</key>
							<integer>1</integer>
							<key>begin</key>
							<string>(?=&lt;[^&gt;]*?&gt;)</string>
							<key>end</key>
							<string>(?&lt;=&gt;)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.html.basic</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#ampersand</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#bracket</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#raw</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#bold</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#image-inline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link-inline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link-inet</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link-email</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#image-ref</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link-ref-literal</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link-ref</string>
						</dict>
					</array>
				</dict>
				<key>link-email</key>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.link.markdown</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.markdown</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.link.markdown</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&lt;)((?:mailto:)?[-.\w]+@[-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+)(&gt;)</string>
					<key>name</key>
					<string>meta.link.email.lt-gt.markdown</string>
				</dict>
				<key>link-inet</key>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.link.markdown</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.markdown</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.link.markdown</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&lt;)((?:https?|ftp)://.*?)(&gt;)</string>
					<key>name</key>
					<string>meta.link.inet.markdown</string>
				</dict>
				<key>link-inline</key>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.markdown</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>string.other.link.description.title.markdown</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.markdown</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.markdown</string>
						</dict>
						<key>13</key>
						<dict>
							<key>name</key>
							<string>string.other.link.description.title.markdown</string>
						</dict>
						<key>14</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.markdown</string>
						</dict>
						<key>15</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.markdown</string>
						</dict>
						<key>16</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.metadata.markdown</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.other.link.title.markdown</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.markdown</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.whitespace.markdown</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.metadata.markdown</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.link.markdown</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.markdown</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.link.markdown</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x:
						(\[)((?&lt;square&gt;[^\[\]\\]|\\.|\[\g&lt;square&gt;*+\])*+)(\])
													# Match the link text.
						([ ])?						# Space not allowed
						(\()						# Opening paren for url
							(&lt;?)(.*?)(&gt;?)			# The url
							[ \t]*					# Optional whitespace
							(?:
								  ((\().+?(\)))		# Match title in parens…
								| ((").+?("))		# or in quotes.
							)?						# Title is optional
							\s*						# Optional whitespace
						(\))
					 )</string>
					<key>name</key>
					<string>meta.link.inline.markdown</string>
				</dict>
				<key>link-ref</key>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.markdown</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.other.link.title.markdown</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.markdown</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.constant.begin.markdown</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>constant.other.reference.link.markdown</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.constant.end.markdown</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\[)((?&lt;square&gt;[^\[\]\\]|\\.|\[\g&lt;square&gt;*+\])*+)(\])[ ]?(\[)([^\]]*+)(\])</string>
					<key>name</key>
					<string>meta.link.reference.markdown</string>
				</dict>
				<key>link-ref-literal</key>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.markdown</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.other.link.title.markdown</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.markdown</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.constant.begin.markdown</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.constant.end.markdown</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\[)((?&lt;square&gt;[^\[\]\\]|\\.|\[\g&lt;square&gt;*+\])*+)(\])[ ]?(\[)(\])</string>
					<key>name</key>
					<string>meta.link.reference.literal.markdown</string>
				</dict>
				<key>raw</key>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.raw.markdown</string>
						</dict>
						<key>2</key>
						<dict/>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.raw.markdown</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(`+(?!([r|R][ ]+)))([^`]|(?!(?&lt;!`)\1(?!`))`)*+(\1)</string>
					<key>name</key>
					<string>markup.raw.inline.markdown</string>
				</dict>
			</dict>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>text.html.markdown.redcarpet</string>
	<key>uuid</key>
	<string>BE79A69A-B9F5-4BCD-9068-893496E86663</string>
</dict>
</plist>
